{"version":3,"sources":["pages/Auth/style.module.scss","components/Input/style.module.scss","pages/Change/style.module.scss","pages/Main/style.module.scss","components/Button/style.module.scss","redux/types.js","redux/reducers/index.js","redux/index.js","components/Button/index.jsx","components/Input/index.jsx","pages/Auth/Login/index.js","pages/Auth/Registration/index.js","pages/Auth/index.js","pages/Change/index.js","pages/Main/index.jsx","App.js","index.js"],"names":["module","exports","CHANGE_PASSWORD","CREATE_USER","SIGN_IN","SIGN_OUT","initialState","token","localStorage","getItem","users","JSON","parse","setItem","stringify","error","store","createStore","state","action","type","newUser","payload","usr","filter","item","id","password","oldPass","change","map","user","email","removeItem","cn","classNames","bind","style","Button","children","btnLine","disable","onClick","className","buttonLine","disabled","Input","placeholder","label","onChange","args","inputWrapper","htmlFor","input","name","Login","useForm","register","handleSubmit","errors","formState","dispatch","useDispatch","useSelector","onSubmit","data","console","log","required","pattern","value","message","Registration","getValues","reset","useState","rptPswrd","setRptPswrd","rptPass","setRptPass","history","useHistory","useEffect","Date","now","alert","push","minLength","maxLength","e","target","Auth","auth","authHeader","activeClassName","to","path","exact","Change","setOldPass","cont","Number","btns","Main","container","App","publicRoutes","privateRoutes","routes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oFACAA,EAAOC,QAAU,CAAC,KAAO,oBAAoB,WAAa,0BAA0B,SAAW,wBAAwB,eAAiB,gC,mBCAxID,EAAOC,QAAU,CAAC,aAAe,4BAA4B,MAAQ,uB,mBCArED,EAAOC,QAAU,CAAC,KAAO,oBAAoB,KAAO,sB,mBCApDD,EAAOC,QAAU,CAAC,UAAY,yBAAyB,KAAO,sB,mBCA9DD,EAAOC,QAAU,CAAC,OAAS,sBAAsB,WAAa,4B,sICDjDC,EAAkB,kBAClBC,EAAc,cACdC,EAAU,UACVC,EAAW,WCOlBC,EAAe,CACnBC,MATYC,aAAaC,QAAQ,SAC/BD,aAAaC,QAAQ,SACrB,KAQFC,MANYF,aAAaC,QAAQ,SAC/BE,KAAKC,MAAMJ,aAAaC,QAAQ,UAChCD,aAAaK,QAAQ,QAASF,KAAKG,UAAU,KAK/CC,MAAO,MCRMC,EAFDC,aDaa,WAAmC,IAAlCC,EAAiC,uDAAzBZ,EAAca,EAAW,uCAC3D,OAAQA,EAAOC,MACb,KAAKjB,EACH,IAAMkB,EAAO,6BAAOH,QAAP,IAAOA,OAAP,EAAOA,EAAOR,OAAd,CAAqBS,EAAOG,UAEzC,OADAd,aAAaK,QAAQ,QAASF,KAAKG,UAAUO,IACtC,2BACFH,GADL,IAEER,MAAOW,IAGX,KAAKnB,EACH,IAAMqB,EAAML,EAAMR,MAAMc,QACtB,SAACC,GAAD,OAAc,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMC,MAAOP,EAAOG,QAAQI,MACtC,GAEF,GAAIH,EAAII,WAAaR,EAAOG,QAAQM,QAAS,CAC3C,IAAMC,EAASX,EAAMR,MAAMoB,KAAI,SAACL,GAAD,OAC7BA,EAAI,KAAWN,EAAOG,QAAQI,GAA9B,2BACSD,GADT,IACeE,SAAUR,EAAOG,QAAQK,WACpCF,KAGN,OADAjB,aAAaK,QAAQ,QAASF,KAAKG,UAAUe,IACtC,2BACFX,GADL,IAEEH,MAAO,KACPL,MAAOmB,IAGT,OAAO,2BACFX,GADL,IAEEH,MAAO,0FAIb,KAAKX,EACH,IAAM2B,EAAOb,EAAMR,MAAMc,QACvB,SAACC,GAAD,OAAc,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMO,SAAUb,EAAOG,QAAQU,SACzC,GACF,OAAMD,EACAA,EAAKJ,WAAaR,EAAOG,QAAQK,UACnCnB,aAAaK,QAAQ,QAASF,KAAKG,UAAUiB,EAAKL,KAC3C,2BACFR,GADL,IAEEX,MAAOwB,EAAKL,GACZX,MAAO,QAGF,2BACFG,GADL,IAEEH,MAAO,2FAIJ,2BACFG,GADL,IAEEH,MAAO,+JAIb,KAAKV,EAEH,OADAG,aAAayB,WAAW,SACjB,2BACFf,GADL,IAEEX,MAAO,OAGX,QACE,OAAOW,M,iFE9EPgB,EAAKC,IAAWC,KAAKC,KAcZC,EAZA,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QAC5C,OACE,wBACEC,UAAWT,EAAG,SAAU,CAAEU,WAAYJ,IACtCK,SAAUJ,EACVC,QAASA,EAHX,SAKGH,K,iBCeQO,EAzBD,SAAC,GAOR,IAAD,IANJ1B,YAMI,MANG,OAMH,MALJ2B,mBAKI,MALU,cAKV,MAJJhC,aAII,MAJI,GAIJ,MAHJiC,aAGI,MAHI,OAGJ,EAFJC,EAEI,EAFJA,SACAC,EACI,EADJA,KAEA,OACE,sBAAKP,UAAWN,IAAMc,aAAtB,UACE,uBAAOC,QAAShC,EAAhB,SAAuB4B,IACvB,iDACME,GADN,IAEEP,UAAWN,IAAMgB,MACjBjC,KAAMA,EACN2B,YAAaA,EACbrB,GAAIN,EACJ6B,SAAUA,EACVK,KAAMlC,KAER,+BAAOL,QC+BEwC,EAhDD,WAAO,IAAD,MAKdC,cAHFC,EAFgB,EAEhBA,SACAC,EAHgB,EAGhBA,aACaC,EAJG,EAIhBC,UAAaD,OAGTE,EAAWC,cACX/C,EAAQgD,aAAY,SAAC7C,GAAD,OAAWA,EAAMH,SAO3C,OACE,uBAAMiD,SAAUN,GAND,SAACO,GAChBC,QAAQC,IAAIF,GACZJ,EAAS,CAAEzC,KAAMhB,EAASkB,QAAS2C,OAInC,UACE,cAAC,EAAD,CACE7C,KAAK,QACL4B,MAAM,QACND,YAAY,SACZG,KAAI,eACCO,EAAS,QAAS,CACnBW,SAAU,oGACVC,QAAS,CACPC,MAAO,2CACPC,QAAS,8DAIfxD,OAAO,UAAA4C,EAAO3B,aAAP,eAAcuC,WAAd,UAAyBZ,EAAO3B,aAAhC,aAAyB,EAAcuC,WAEhD,cAAC,EAAD,CACEnD,KAAK,WACL4B,MAAM,uCACND,YAAY,kFACZG,KAAI,eACCO,EAAS,WAAY,CACtBW,SAAU,uGAGdrD,MAAOA,GAASA,IAElB,cAAC,EAAD,CAAQK,KAAK,SAAb,gD,OC4CSoD,EArFM,WAAO,IAAD,UAOrBhB,cALFC,EAFuB,EAEvBA,SACAC,EAHuB,EAGvBA,aACaC,EAJU,EAIvBC,UAAaD,OACbc,EALuB,EAKvBA,UACAC,EANuB,EAMvBA,MAEI/C,EAAW8C,IAAY9C,SARJ,EAUOgD,oBAAS,GAVhB,mBAUlBC,EAVkB,KAURC,EAVQ,OAWKF,mBAAS,IAXd,mBAWlBG,EAXkB,KAWTC,EAXS,KAYnBC,EAAUC,cAEVpB,EAAWC,cAkBjB,OAJAoB,qBAAU,WACeL,EAAvBlD,IAAamD,KACZ,CAACA,EAASnD,IAGX,uBAAMqC,SAAUN,GAjBD,SAACO,GAChB,IAAMlC,EAAI,aAAKL,GAAIyD,KAAKC,OAAUnB,GAElCJ,EAAS,CAAEzC,KAAMjB,EAAamB,QAASS,IAEvC2C,EAAM,CAAE1C,MAAO,GAAIL,SAAU,KAC7BoD,EAAW,IAEXM,MAAM,yKACNL,EAAQM,KAAK,eAQb,UACE,cAAC,EAAD,CACElE,KAAK,QACL4B,MAAM,QACND,YAAY,SACZG,KAAI,eACCO,EAAS,QAAS,CACnBW,SAAU,oGACVC,QAAS,CACPC,MAAO,2CACPC,QAAS,8DAIfxD,OAAO,UAAA4C,EAAO3B,aAAP,eAAcuC,WAAd,UAAyBZ,EAAO3B,aAAhC,aAAyB,EAAcuC,WAEhD,cAAC,EAAD,CACEnD,KAAK,WACL4B,MAAM,uCACND,YAAY,kFACZG,KAAI,eACCO,EAAS,WAAY,CACtBW,SAAU,oGACVC,QAAS,CACPC,MAAO,QACPC,QAAS,gLAEXgB,UAAW,CACTjB,MAAO,EACPC,QAAS,oIAEXiB,UAAW,CACTlB,MAAO,GACPC,QAAS,iIAIfxD,OAAO,UAAA4C,EAAOhC,gBAAP,eAAiB4C,WAAjB,UAA4BZ,EAAOhC,gBAAnC,aAA4B,EAAiB4C,WAEtD,cAAC,EAAD,CACEnD,KAAK,WACL4B,MAAM,0GACND,YAAY,kFACZuB,MAAOQ,EACP7B,SAAU,SAACwC,GAAD,OAAOV,EAAWU,EAAEC,OAAOpB,QACrCvD,OAAQ6D,GAAY,8GAEtB,cAAC,EAAD,CAAQnC,SAAUmC,EAAlB,8HCjFA1C,EAAKC,IAAWC,KAAKC,KAoCZsD,MAlCf,WACE,OACE,sBAAKhD,UAAWN,IAAMuD,KAAtB,UACE,sBAAKjD,UAAWN,IAAMwD,WAAtB,UACE,cAAC,IAAD,CACElD,UAAWT,EAAG,YACd4D,gBAAiB5D,EAAG,kBACpB6D,GAAI,gBAHN,4CAOA,cAAC,IAAD,CACEpD,UAAWT,EAAG,YACd4D,gBAAiB5D,EAAG,kBACpB6D,GAAI,gBAHN,mFAQF,8BACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAM,gBAAiBC,OAAK,EAAnC,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,KAAM,gBAAiBC,OAAK,EAAnC,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAUF,GAAG,2B,iBCyDRG,EAnFA,WAAO,IAAD,MAMf1C,cAJFC,EAFiB,EAEjBA,SACAC,EAHiB,EAGjBA,aACaC,EAJI,EAIjBC,UAAaD,OAGThC,GAAW8C,EAPE,EAKjBA,aAE2B9C,SAEvBpB,EAAQwD,aAAY,SAAC7C,GAAD,OAAWA,EAAMX,SACrCQ,EAAQgD,aAAY,SAAC7C,GAAD,OAAWA,EAAMH,SACrC8C,EAAWC,cAEXkB,EAAUC,cAbG,EAeaN,oBAAS,GAftB,mBAeZC,EAfY,KAeFC,EAfE,OAgBWF,mBAAS,IAhBpB,mBAgBZG,EAhBY,KAgBHC,EAhBG,OAiBWJ,mBAAS,IAjBpB,mBAiBZ/C,EAjBY,KAiBHuE,EAjBG,KA8BnB,OAJAjB,qBAAU,WACeL,EAAvBlD,IAAamD,KACZ,CAACA,EAASnD,IAGX,qBAAKgB,UAAWN,IAAM+D,KAAtB,SACE,uBAAMpC,SAAUN,GAbH,SAACO,GAChB,IAAMlC,EAAI,2BAAQkC,GAAR,IAAcvC,GAAI2E,OAAO9F,GAAQqB,YAC3CiC,EAAS,CAAEzC,KAAMlB,EAAiBoB,QAASS,IAE3CiD,EAAQM,KAAK,eASX,UACE,cAAC,EAAD,CACElE,KAAK,WACL4B,MAAM,WACND,YAAY,WACZhC,MAAOA,GAASA,EAChBuD,MAAO1C,EACPqB,SAAU,SAACwC,GAAD,OAAOU,EAAWV,EAAEC,OAAOpB,UAGvC,cAAC,EAAD,CACElD,KAAK,WACL4B,MAAM,uCACND,YAAY,kFACZG,KAAI,eACCO,EAAS,WAAY,CACtBW,SAAU,oGACVC,QAAS,CACPC,MAAO,QACPC,QAAS,gLAEXgB,UAAW,CACTjB,MAAO,EACPC,QAAS,oIAEXiB,UAAW,CACTlB,MAAO,GACPC,QAAS,iIAIfxD,OAAO,UAAA4C,EAAOhC,gBAAP,eAAiB4C,WAAjB,UAA4BZ,EAAOhC,gBAAnC,aAA4B,EAAiB4C,WAGtD,cAAC,EAAD,CACEnD,KAAK,WACL4B,MAAM,0GACND,YAAY,kFACZuB,MAAOQ,EACP7B,SAAU,SAACwC,GAAD,OAAOV,EAAWU,EAAEC,OAAOpB,QACrCvD,OAAQ6D,GAAY,8GAEtB,sBAAKjC,UAAWN,IAAMiE,KAAtB,UACE,cAAC,EAAD,CAAQ7D,SAAUmC,EAAlB,8DACA,cAAC,EAAD,CAAQlC,QAAS,kBAAMsC,EAAQM,KAAK,aAApC,8E,iBChEKiB,EAfF,WACX,IAAM1C,EAAWC,cACXkB,EAAUC,cAEhB,OACE,sBAAKtC,UAAWN,IAAMmE,UAAtB,UACE,8HACA,sBAAK7D,UAAWN,IAAMiE,KAAtB,UACE,cAAC,EAAD,CAAQ5D,QAAS,kBAAMmB,EAAS,CAAEzC,KAAMf,KAAxC,4CACA,cAAC,EAAD,CAAQqC,QAAS,kBAAMsC,EAAQM,KAAK,iBAApC,0GCkBOmB,EA5BH,WACV,IAAMlG,EAAQwD,aAAY,SAAC7C,GAAD,OAAWA,EAAMX,SAErCmG,EACJ,cAAC,IAAD,UACE,cAAC,IAAD,CAAOV,KAAM,WAAb,SACE,cAAC,EAAD,QAKAW,EACJ,eAAC,IAAD,WACE,cAAC,IAAD,CAAOX,KAAM,WAAYC,OAAK,EAA9B,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,KAAM,eAAgBC,OAAK,EAAlC,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAUF,GAAI,gBAIZa,EAASrG,EAAQoG,EAAgBD,EAEvC,OAAO,8BAAME,KCtBfC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAU/F,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,cAAC,EAAD,UAINgG,SAASC,eAAe,W","file":"static/js/main.13eaada1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"style_auth__2-YXZ\",\"authHeader\":\"style_authHeader__1ATR8\",\"authLink\":\"style_authLink__26OE_\",\"authLinkActive\":\"style_authLinkActive__HxXIE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputWrapper\":\"style_inputWrapper__2K_lX\",\"input\":\"style_input__1k1f5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cont\":\"style_cont__3hWaG\",\"btns\":\"style_btns__2UfFH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"style_container__1jql8\",\"btns\":\"style_btns__2BXnW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"style_button__2NB1i\",\"buttonLine\":\"style_buttonLine__S1gXC\"};","export const CHANGE_PASSWORD = 'CHANGE_PASSWORD';\nexport const CREATE_USER = 'CREATE_USER';\nexport const SIGN_IN = 'SIGN_IN';\nexport const SIGN_OUT = 'SIGN_OUT';\n","import { CHANGE_PASSWORD, CREATE_USER, SIGN_IN, SIGN_OUT } from '../types';\n\nconst token = localStorage.getItem('token')\n  ? localStorage.getItem('token')\n  : null;\n\nconst users = localStorage.getItem('users')\n  ? JSON.parse(localStorage.getItem('users'))\n  : localStorage.setItem('users', JSON.stringify([]));\n\nconst initialState = {\n  token,\n  users,\n  error: null,\n};\n\nexport const rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CREATE_USER:\n      const newUser = [...state?.users, action.payload];\n      localStorage.setItem('users', JSON.stringify(newUser));\n      return {\n        ...state,\n        users: newUser,\n      };\n\n    case CHANGE_PASSWORD:\n      const usr = state.users.filter(\n        (item) => item?.id === action.payload.id\n      )[0];\n\n      if (usr.password === action.payload.oldPass) {\n        const change = state.users.map((item) =>\n          item['id'] === action.payload.id\n            ? { ...item, password: action.payload.password }\n            : item\n        );\n        localStorage.setItem('users', JSON.stringify(change));\n        return {\n          ...state,\n          error: null,\n          users: change,\n        };\n      } else {\n        return {\n          ...state,\n          error: 'Пароль неверный',\n        };\n      }\n\n    case SIGN_IN:\n      const user = state.users.filter(\n        (item) => item?.email === action.payload.email\n      )[0];\n      if (!!user) {\n        if (user.password === action.payload.password) {\n          localStorage.setItem('token', JSON.stringify(user.id));\n          return {\n            ...state,\n            token: user.id,\n            error: null,\n          };\n        } else {\n          return {\n            ...state,\n            error: 'Неверный пароль!',\n          };\n        }\n      } else {\n        return {\n          ...state,\n          error: 'Такой пользователь не найден!',\n        };\n      }\n\n    case SIGN_OUT:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        token: null,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { createStore } from 'redux';\nimport { rootReducer } from './reducers';\n\nconst store = createStore(rootReducer);\n\nexport default store;\n","import React from 'react';\nimport classNames from 'classnames/bind';\n\nimport style from './style.module.scss';\n\nconst cn = classNames.bind(style);\n\nconst Button = ({ children, btnLine, disable, onClick }) => {\n  return (\n    <button\n      className={cn('button', { buttonLine: btnLine })}\n      disabled={disable}\n      onClick={onClick}\n    >\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport style from './style.module.scss';\n\nconst Input = ({\n  type = 'text',\n  placeholder = 'Placeholder',\n  error = '',\n  label = 'Text',\n  onChange,\n  args,\n}) => {\n  return (\n    <div className={style.inputWrapper}>\n      <label htmlFor={type}>{label}</label>\n      <input\n        {...args}\n        className={style.input}\n        type={type}\n        placeholder={placeholder}\n        id={type}\n        onChange={onChange}\n        name={type}\n      />\n      <span>{error}</span>\n    </div>\n  );\n};\n\nexport default Input;\n","import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Button from '../../../components/Button';\nimport Input from '../../../components/Input';\nimport { SIGN_IN } from '../../../redux/types';\n\nconst Login = () => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n\n  const dispatch = useDispatch();\n  const error = useSelector((state) => state.error);\n\n  const onSubmit = (data) => {\n    console.log(data);\n    dispatch({ type: SIGN_IN, payload: data });\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <Input\n        type='email'\n        label='Email'\n        placeholder='E-mail'\n        args={{\n          ...register('email', {\n            required: 'Обязательное поля',\n            pattern: {\n              value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n              message: 'Email не верный',\n            },\n          }),\n        }}\n        error={errors.email?.message && errors.email?.message}\n      />\n      <Input\n        type='password'\n        label='Пароль'\n        placeholder='Введите пароль'\n        args={{\n          ...register('password', {\n            required: 'Обязательное поля',\n          }),\n        }}\n        error={error && error}\n      />\n      <Button type='submit'>Войти</Button>\n    </form>\n  );\n};\n\nexport default Login;\n","import React, { useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport Button from '../../../components/Button';\nimport Input from '../../../components/Input';\nimport { CREATE_USER } from '../../../redux/types';\n\nconst Registration = () => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    getValues,\n    reset,\n  } = useForm();\n  const password = getValues().password;\n\n  const [rptPswrd, setRptPswrd] = useState(true);\n  const [rptPass, setRptPass] = useState('');\n  const history = useHistory();\n\n  const dispatch = useDispatch();\n\n  const onSubmit = (data) => {\n    const user = { id: Date.now(), ...data };\n\n    dispatch({ type: CREATE_USER, payload: user });\n\n    reset({ email: '', password: '' });\n    setRptPass('');\n\n    alert('Вы успешно зарегистрировались!');\n    history.push('/bcraft/');\n  };\n\n  useEffect(() => {\n    password !== rptPass ? setRptPswrd(false) : setRptPswrd(true);\n  }, [rptPass, password]);\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <Input\n        type='email'\n        label='Email'\n        placeholder='E-mail'\n        args={{\n          ...register('email', {\n            required: 'Обязательное поля',\n            pattern: {\n              value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n              message: 'Email не верный',\n            },\n          }),\n        }}\n        error={errors.email?.message && errors.email?.message}\n      />\n      <Input\n        type='password'\n        label='Пароль'\n        placeholder='Введите пароль'\n        args={{\n          ...register('password', {\n            required: 'Обязательное поля',\n            pattern: {\n              value: /[A-Z]/,\n              message: 'Должен быть одно заглавная буква',\n            },\n            minLength: {\n              value: 6,\n              message: 'Слишком короткий пароль',\n            },\n            maxLength: {\n              value: 12,\n              message: 'Слишком длинный пароль',\n            },\n          }),\n        }}\n        error={errors.password?.message && errors.password?.message}\n      />\n      <Input\n        type='password'\n        label='Подтвердите пароль'\n        placeholder='Введите пароль'\n        value={rptPass}\n        onChange={(e) => setRptPass(e.target.value)}\n        error={!rptPswrd && 'Пароли не совпадают!'}\n      />\n      <Button disable={!rptPswrd}>Зарегистрироваться</Button>\n    </form>\n  );\n};\n\nexport default Registration;\n","import React from 'react';\nimport classNames from 'classnames/bind';\n\nimport style from './style.module.scss';\nimport Login from './Login';\nimport Registration from './Registration';\nimport { NavLink, Redirect, Route, Switch } from 'react-router-dom';\n\nconst cn = classNames.bind(style);\n\nfunction Auth() {\n  return (\n    <div className={style.auth}>\n      <div className={style.authHeader}>\n        <NavLink\n          className={cn('authLink')}\n          activeClassName={cn('authLinkActive')}\n          to={'/bcraft/login'}\n        >\n          Войти\n        </NavLink>\n        <NavLink\n          className={cn('authLink')}\n          activeClassName={cn('authLinkActive')}\n          to={'/bcraft/regst'}\n        >\n          Регистрация\n        </NavLink>\n      </div>\n      <div>\n        <Switch>\n          <Route path={'/bcraft/login'} exact>\n            <Login />\n          </Route>\n          <Route path={'/bcraft/regst'} exact>\n            <Registration />\n          </Route>\n          <Redirect to='/bcraft/login' />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default Auth;\n","import React, { useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport Button from '../../components/Button';\n\nimport Input from '../../components/Input';\nimport { CHANGE_PASSWORD } from '../../redux/types';\n\nimport style from './style.module.scss';\n\nconst Change = () => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    getValues,\n  } = useForm();\n  const password = getValues().password;\n\n  const token = useSelector((state) => state.token);\n  const error = useSelector((state) => state.error);\n  const dispatch = useDispatch();\n\n  const history = useHistory();\n\n  const [rptPswrd, setRptPswrd] = useState(true);\n  const [rptPass, setRptPass] = useState('');\n  const [oldPass, setOldPass] = useState('');\n\n  const onSubmit = (data) => {\n    const user = { ...data, id: Number(token), oldPass };\n    dispatch({ type: CHANGE_PASSWORD, payload: user });\n\n    history.push('/bcraft/');\n  };\n\n  useEffect(() => {\n    password !== rptPass ? setRptPswrd(false) : setRptPswrd(true);\n  }, [rptPass, password]);\n\n  return (\n    <div className={style.cont}>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <Input\n          type='password'\n          label='Password'\n          placeholder='password'\n          error={error && error}\n          value={oldPass}\n          onChange={(e) => setOldPass(e.target.value)}\n        />\n\n        <Input\n          type='password'\n          label='Пароль'\n          placeholder='Введите пароль'\n          args={{\n            ...register('password', {\n              required: 'Обязательное поля',\n              pattern: {\n                value: /[A-Z]/,\n                message: 'Должен быть одно заглавная буква',\n              },\n              minLength: {\n                value: 6,\n                message: 'Слишком короткий пароль',\n              },\n              maxLength: {\n                value: 12,\n                message: 'Слишком длинный пароль',\n              },\n            }),\n          }}\n          error={errors.password?.message && errors.password?.message}\n        />\n\n        <Input\n          type='password'\n          label='Подтвердите пароль'\n          placeholder='Введите пароль'\n          value={rptPass}\n          onChange={(e) => setRptPass(e.target.value)}\n          error={!rptPswrd && 'Пароли не совпадают!'}\n        />\n        <div className={style.btns}>\n          <Button disable={!rptPswrd}>Изменить</Button>\n          <Button onClick={() => history.push('/bcraft/')}>На главную</Button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Change;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport Button from '../../components/Button';\nimport { SIGN_OUT } from '../../redux/types';\n\nimport style from './style.module.scss';\n\nconst Main = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  return (\n    <div className={style.container}>\n      <h1>Добро пожаловать!</h1>\n      <div className={style.btns}>\n        <Button onClick={() => dispatch({ type: SIGN_OUT })}>Выйти</Button>\n        <Button onClick={() => history.push('/bcraft/pass')}>Изменить пароль</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Main;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport Auth from './pages/Auth';\nimport Change from './pages/Change';\nimport Main from './pages/Main';\n\nconst App = () => {\n  const token = useSelector((state) => state.token);\n\n  const publicRoutes = (\n    <Switch>\n      <Route path={'/bcraft/'}>\n        <Auth />\n      </Route>\n    </Switch>\n  );\n\n  const privateRoutes = (\n    <Switch>\n      <Route path={'/bcraft/'} exact>\n        <Main />\n      </Route>\n      <Route path={'/bcraft/pass'} exact>\n        <Change />\n      </Route>\n      <Redirect to={'/bcraft/'} />\n    </Switch>\n  );\n\n  const routes = token ? privateRoutes : publicRoutes;\n\n  return <div>{routes}</div>;\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './redux';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}